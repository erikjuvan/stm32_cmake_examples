////////////////////////////////////////////////////////////////////////////////
// COPYRIGHT (c) 2020
// EMSISO
// All rights reserved.
////////////////////////////////////////////////////////////////////////////////
/*!
 * @file     system.h
 * @note     System header files
 * @author   Marko Rman
 * @date     01.02.2021
 * @brief    Functions for system status
 */

#ifndef __SYSTEM_H
#define __SYSTEM_H

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

typedef enum
{
    eSYSTEM_INIT_OK             = 0x0000, /**< All initialization is ok */
    eSYSTEM_INIT_MAN_PARAM_FAIL = 0x0001, /**< Initialization of Manufacturer parameters failed */
    eSYSTEM_INIT_CAL_PARAM_FAIL = 0x0002, /**< Initialization of Calibration parameters failed */
    eSYSTEM_INIT_CANOPEN_FAIL   = 0x0004, /**< Initialization of CANopen stack failed */
    eSYSTEM_INIT_OSCI_FAIL      = 0x0008, /**< Initialization of Osci module failed */
    eSYSTEM_INIT_MOTOR_CONTROL_FAIL = 0x0010, /**< Initialization of Motor Control failed */
    eSYSTEM_INIT_FW_UPDATE_FAIL     = 0x0020, /**< Initialization of FW update module failed */
} system_init_status_t;

////////////////////////////////////////////////////////////////////////////////
// Variables
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function prototypes
////////////////////////////////////////////////////////////////////////////////
void                 system_set_init_fail(system_init_status_t init_status);
system_init_status_t system_get_init_status(void);

#endif
